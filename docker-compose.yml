version: "3.8"
services:

  postgres-db:
    image: postgres:16
    environment:
      POSTGRES_DB: orbiter_db
      POSTGRES_USER: stichmc
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - orbiter_db:/var/lib/postgresql/data
      - ./backend/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stichmc -d orbiter_db"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  backend:
    depends_on:
      postgres-db:
        condition: service_healthy
    build: ./backend/
    ports:
      - "4000:4000"
    volumes:
      - type: bind
        source: ./backend/src/
        target: /app/src/
    environment:
      - PORT=4000
      - NODE_ENV=development
      - POSTGRES_USER=stichmc
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=orbiter_db
      - FRONTEND_URL=http://localhost:3000
      - API_KEY=6TQMSZ-GD5J56-SJA9LN-57T9
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:4000/"]
      interval: 5s
      timeout: 3s
      retries: 2
      start_period: 1s

  frontend:
    depends_on:
      backend:
        condition: service_healthy
    build: ./frontend/
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/src
      - type: bind
        source: ./frontend/public
        target: /app/public
    command: npm run dev

volumes:
  orbiter_db: